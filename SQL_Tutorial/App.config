<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
            <section name="SQL_Tutorial.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
        </sectionGroup>
    </configSections>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
    </startup>
    <userSettings>
        <SQL_Tutorial.Properties.Settings>
            <setting name="Intro_Text" serializeAs="String">
                <value>Sehr geehrte Anwenderin, sehr geehrter Anwender,

in diesem Tutorial werden Ihnen als neueinsteiger grundlegende Abfragen und Funktionen der Sprache SQL, Structured Query Language (strukturierte Abfragesprache), beigebracht. 

Wir wünschen Ihnen viel spaß, und vorallem erfolg, beim Lesen der Lektionen, und Lösen der Aufgaben</value>
            </setting>
            <setting name="Lektion1_Text" serializeAs="String">
                <value>Mit den Aggregatfunktionen kannst Du statistische Auswertungen numerischer Daten in einer Datenbank vornehmen. 
Jede Aggregatfunktion wird auf ein Attribut einer Tabelle angewendet und liefert als Ergebnis einen Zahlenwert zurück.
Es gibt die 6 Aggregatfunktionen AVG, MAX, MIN, SUM, COUNTund DISTINCT

HINWEIS: Ohne die GROUP BY-Klausel kannst Du Aggregatfunktionen und die Auswahl von Attributen nicht mischen. Die folgende select-Anweisung liefert also einen Fehler:
SELECT Artikelname, AVG(Einzelpreis) FROM Artikel

DISTINCT (=engl. für eindeutig) Mit dem distinct-Operator sorgt man dafür, dass in der Ergebnistabelle keine Einträge mehrfach vorkommen. 

SUM (=engl. für Summe)
Dieser SQL-Befehl zählt die aus der Abfrage resultierenden Zahlenwerte (numerischen Werte) der Spalte zusammen, auf die er angewendet wird.

COUNT (=engl. für Anzahl)
Dieser Befehl zählt die Anzahl der von NULL verschiedenen Werte einer Spalte in der Ergebnistabelle. Alle Datensätze zählt man mit count(*). 
Will man nur die verschiedenen Werte einer Spalte zählen, so benutzt man count(DISTINCT Spaltenname). 

MAX() : MAXIMUM (engl. für Maximum)
MIN() : MINIMUM (engl. für Minimum)
Benutzt man diese Befehle, so erhält man die größte/kleinste Zahl, also das Maximum/Minimum der Spalte. 

AVG() : AVERAGE (engl. für Mittelwert)
Ähnlich wie MIN und MAX gibt uns AVG den Mittelwert (Durchschnitt) aller Zahlenwerte einer Spalte. Dabei werden alle Einträge addiert und dann durch die Anzahl der Einträge geteilt. </value>
            </setting>
            <setting name="Username" serializeAs="String">
                <value>Admin</value>
            </setting>
            <setting name="Password" serializeAs="String">
                <value>Admin</value>
            </setting>
            <setting name="Ueberschrift" serializeAs="String">
                <value>SQL Tutorial</value>
            </setting>
            <setting name="L1_Aufgabe1" serializeAs="String">
                <value>gib den durschschnittlichen einzelpreis von allen artikeln aus</value>
            </setting>
            <setting name="L1_Aufgabe2" serializeAs="String">
                <value>Gib an wie viele Bestellungen die Firma United Package insgesamgt ausgeliefert hat</value>
            </setting>
            <setting name="L1_Aufgabe3" serializeAs="String">
                <value>gib die durchschnittlichen frachtkosten an</value>
            </setting>
            <setting name="L1_Aufgabe4" serializeAs="String">
                <value>gib alle Kunden aus, die bei dem lieferanten 'Exotic Liquids' mit einen mindestumsatz von 1000 bestellt haben</value>
            </setting>
            <setting name="Lektion2_Text" serializeAs="String">
                <value>Arithmetische Operatoren führen mathematische Operationen für zwei Ausdrücke eines oder mehrerer Datentypen durch.
 Sie werden von der numerischen Datentypkategorie aus ausgeführt.
Operator                Bedeutung
+ (Addition) 	Addition
- (Subtraktion) 	Subtraktion
* (Multiplikation) 	Multiplikation
/ (Dividieren) 	Division

Mit den Operatoren Plus (+) und Minus (-) können auch arithmetische Operationen für datetime- und smalldatetime-Werte ausgeführt werden.
z.B. Wir können BestellteEinheiten und Lagerbestand  zusammen addieren
"SELECT (Lagerbestand+BestellteEinheiten) as Addition From Artikel"

Das Datum von Heute bekommt man mit DATE()</value>
            </setting>
            <setting name="Lektion3_Text" serializeAs="String">
                <value>Um Redundanzen beim Speichern zu vermeiden, werden die Informationen auf verschiedene Tabellen verteilt. Zur Erhaltung der logischen Zusammengehörigkeit werden Fremdschlüssel-Beziehungen zwischen den Tabellen aufgebaut.

Muss das Datenbanksystem eine Anfrage verarbeiten, bei der Informationen aus mehreren Tabellen benötigt werden, ist es erforderlich die einzelnen Datensätze der Tabellen wieder zusammenzuführen. 
Dadurch werden die ursprünglichen Informationen wiederhergestellt. Dies wird in SQL-Datenbanken mit Hilfe von SQL JOINS (Verbünden) umgesetzt. Mit einem SQL Join werden mehrere Tabellen verknüpft, die in einer Beziehung zueinander stehen.
Hier z.B. Wir werden die Tabellen Bestellungen und Bestelldetails verbinden:
"SELECT * FROM Bestellungen Inner Join Bestelldetails On Bestellungen.BestellNr=Bestelldetails.BestellNr"</value>
            </setting>
            <setting name="Lektion4_Text" serializeAs="String">
                <value>GROUP BY 

Die Group By Funktion erweitert die aus Lektion 1 erlernten Aggregatfunktionen AVG(), SUM() etc.
Mit Ihr kann man ergebnisse aus diesen, mit anderen tabellen in einer Select anweisung ausgeben

zb: select LieferantenNr, avg(Einzelpreis) from Artikel group by LieferantenNr 
</value>
            </setting>
            <setting name="Lektion5_Text" serializeAs="String">
                <value>Das ist das text von Fünf Zwei</value>
            </setting>
            <setting name="Lektion1_Titel" serializeAs="String">
                <value>LEKTION 1</value>
            </setting>
            <setting name="Lektion2_Titel" serializeAs="String">
                <value>LEKTION 2</value>
            </setting>
            <setting name="Lektion3_Titel" serializeAs="String">
                <value>LEKTION 3</value>
            </setting>
            <setting name="Lektion4_Titel" serializeAs="String">
                <value>LEKTION 4</value>
            </setting>
            <setting name="Lektion5_Titel" serializeAs="String">
                <value>LEKTION 5</value>
            </setting>
            <setting name="L2_Aufgabe2" serializeAs="String">
                <value>subtrahiere den Mindestbestand vom Lagerbestand,
bei welchen artikeln muss das lager aufgefüllt werden ? 
</value>
            </setting>
            <setting name="L2_Aufgabe1" serializeAs="String">
                <value>gib an wie alt die einzelnen bestellungeen sind</value>
            </setting>
            <setting name="L2_Aufgabe3" serializeAs="String">
                <value>multipliziere alle Bestellte Artikel multipliziert mit deren Einzelpreis  </value>
            </setting>
            <setting name="L2_Aufgabe4" serializeAs="String">
                <value>Gib an wie viel rabatt(€) man durch den Rabatt(%) auf die einzelnen bestellungen in bestelldetails bekommt
</value>
            </setting>
            <setting name="L3_Aufgabe1" serializeAs="String">
                <value>Gib das Bestelldatum und den dazugehörigen Einzelpreis an.
</value>
            </setting>
            <setting name="L3_Aufgabe2" serializeAs="String">
                <value>Gib die Versandfirmen Namen und das Lieferdatum von deren Lieferungen an
</value>
            </setting>
            <setting name="L3_Aufgabe3" serializeAs="String">
                <value>Gib die Artikelnamen und deren passende kategorienamen an</value>
            </setting>
            <setting name="L3_Aufgabe4" serializeAs="String">
                <value>Gib die Lieferantenfirmen und die Artikelnamen an, die sie Liefern</value>
            </setting>
            <setting name="L4_Aufgabe1" serializeAs="String">
                <value>Gib alle Firmen aus, und deren Durschschnittlichen Artikelpreis, ordne die ausgabe aufsteigend nach dem einzelpreis</value>
            </setting>
            <setting name="L4_Aufgabe2" serializeAs="String">
                <value>Gib den Durchschnittlichen Frachtkostenpreis für jedn kunden an, ordne die ausgabe aufsteigend nach kunden firma</value>
            </setting>
            <setting name="L4_Aufgabe3" serializeAs="String">
                <value>Frage3 von L4</value>
            </setting>
            <setting name="L4_Aufgabe4" serializeAs="String">
                <value>Frage4 von L4</value>
            </setting>
            <setting name="L5_Aufgabe1" serializeAs="String">
                <value>Frage1 von L5</value>
            </setting>
            <setting name="L5_Aufgabe2" serializeAs="String">
                <value>Frage2 von L5</value>
            </setting>
            <setting name="L5_Aufgabe3" serializeAs="String">
                <value>Frage3 von L5</value>
            </setting>
            <setting name="L5_Aufgabe4" serializeAs="String">
                <value>Frage4 von L5</value>
            </setting>
            <setting name="L1_Loesung1" serializeAs="String">
                <value>SELECT avg(Einzelpreis) AS avgEinzelpreis FROM Artikel</value>
            </setting>
            <setting name="L1_Loesung2" serializeAs="String">
                <value>SELECT count(bestellnr) AS insgesamt_ausgeliefert FROM versandfirmen INNER JOIN bestellungen ON versandfirmen.firmennr=bestellungen.versandüber WHERE firma='united package'</value>
            </setting>
            <setting name="L1_Loesung3" serializeAs="String">
                <value>SELECT avg(frachtkosten) AS frachtkosten FROM bestellungen</value>
            </setting>
            <setting name="L1_Loesung4" serializeAs="String">
                <value>SELECT a.artikelname, k.kategoriename FROM artikel a, kategorien k WHERE k.kategorienr=a.kategorienr ORDER BY k.kategoriename asc </value>
            </setting>
            <setting name="L2_Loesung1" serializeAs="String">
                <value>select bestellNr, DATE() - bestelldatum as Tage from bestellungen</value>
            </setting>
            <setting name="L2_Loesung2" serializeAs="String">
                <value>Select artikelname From Artikel where (lagerbestand- mindestbestand) &lt;= 0 </value>
            </setting>
            <setting name="L2_Loesung3" serializeAs="String">
                <value>Select Einzelpreis * Anzahl From Bestelldetails</value>
            </setting>
            <setting name="L2_Loesung4" serializeAs="String">
                <value>Select bestellnr, (anzahl*Einzelpreis)*Rabatt as 'Rabatt(€)' From Bestelldetails Where Rabatt&gt;0 order by bestellnr</value>
            </setting>
            <setting name="L3_Loesung1" serializeAs="String">
                <value>SELECT Bestelldatum,Einzelpreis From Bestellungen Inner Join Bestelldetails On Bestellungen.BestellNr=Bestelldetails.BestellNr</value>
            </setting>
            <setting name="L3_Loesung2" serializeAs="String">
                <value>Select bestellNr, Firma, Lieferdatum From Versandfirmen Inner Join Bestellungen On Versandfirmen.FirmenNr=Bestellungen.versandÜber order by bestellnr</value>
            </setting>
            <setting name="L3_Loesung3" serializeAs="String">
                <value>Select Kategoriename,Artikelname From Kategorien Inner Join Artikel On Kategorien.KategorieNr=Artikel.KategorieN</value>
            </setting>
            <setting name="L3_Loesung4" serializeAs="String">
                <value>Select Firma,Artikelname From Lieferanten Inner Join Artikel On Lieferanten.LieferantenNr =Artikel.LieferantenNr</value>
            </setting>
            <setting name="L4_Loesung1" serializeAs="String">
                <value>Select l.Firma, AVG(a.Einzelpreis) as avgEinzelpreis From Artikel a Inner Join Lieferanten l ON a.LieferantenNr=l.LieferantenNr Group By l.Firma order by avg(a.einzelpreis)</value>
            </setting>
            <setting name="L4_Loesung2" serializeAs="String">
                <value />
            </setting>
            <setting name="L4_Loesung3" serializeAs="String">
                <value />
            </setting>
            <setting name="L4_Loesung4" serializeAs="String">
                <value />
            </setting>
            <setting name="L4_Loesung5" serializeAs="String">
                <value />
            </setting>
            <setting name="L5_Loesung1" serializeAs="String">
                <value />
            </setting>
            <setting name="L5_Loesung2" serializeAs="String">
                <value />
            </setting>
            <setting name="L5_Loesung3" serializeAs="String">
                <value />
            </setting>
            <setting name="L5_Loesung4" serializeAs="String">
                <value />
            </setting>
            <setting name="L5_Loesung5" serializeAs="String">
                <value />
            </setting>
            <setting name="DB_Path" serializeAs="String">
                <value>nordwind.accdb</value>
            </setting>
        </SQL_Tutorial.Properties.Settings>
    </userSettings>
</configuration>